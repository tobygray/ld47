#image: node:14.11.0-alpine
#
#variables:
#  DOCKER_DRIVER: overlay2
#  #  DOCKER_HOST: tcp://localhost:2375

cache:
  paths:
  - node_modules/

stages:
  - test
  - build
  - deploy

test_stuff:
  image: node:14.11-alpine
  stage: test
  script:
   - npm install
   - npm run-script build
   - npm run-script version -- $CI_COMMIT_SHORT_SHA $CI_COMMIT_TIMESTAMP
   - npm run test
   - npm run lint
  tags:
    - docker

build-docker:
  image: docker:19.03
  #image: curlimages/curl
  stage: build
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:latest
  before_script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    # Cache all the things!
    - docker pull $IMAGE_TAG || true
    - docker build --build-arg CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA --build-arg CI_COMMIT_TIMESTAMP=$CI_COMMIT_TIMESTAMP --cache-from $IMAGE_TAG -t $IMAGE_TAG .
    - docker run $IMAGE_TAG /bin/echo this is totally a legit test!
    - docker push $IMAGE_TAG
  tags:
    - docker
  only:
    - master


deploy-docker:
  image: docker/compose:1.27.4
  stage: deploy
  before_script:
    - docker info
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker-compose up --no-deps -d web
  tags:
    - docker
  only:
    - master
